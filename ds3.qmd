---
title: "Datasaurus, static and dynamic branching"
format: 
  html:
    theme: cosmo
date: today
---

```{r}
#| label: setup
#| include: false
library(tidyverse)
library(targets)
Sys.setenv(TAR_PROJECT = "ds_static")
```


### Text files


We created a folder structure as we often have to deal with, 3 sub-folders of data:

``` default
circles
├── dset_2.tsv
└── dset_3.tsv
lines
├── dset_11.tsv
├── dset_12.tsv
├── dset_13.tsv
├── dset_6.tsv
├── dset_7.tsv
├── dset_8.tsv
└── dset_9.tsv
others
├── dset_10.tsv
├── dset_1.tsv
├── dset_4.tsv
└── dset_5.tsv
```

We want to keep the same treatment for the 3 groups but named clearly along the pipeline. 

### How static branching works

[`tar_manifest()`](https://docs.ropensci.org/targets/reference/tar_manifest.html) display the command **to be run**.
For static branching, since we have explicit names, it is worth looking at what the plan is.

Since we have several number of files (2, 4 or 7) per group (**circles**, **lines**, **others**) _dynamic_ branching is used within the static one.

```{r}
tar_manifest() |> 
  rmarkdown::paged_table()
```


For this last demo, we chose to have a less verbose `tar_make()`: **verbose_positives**, _i. e_ show only what is re-run. 
The chosen [**reporter**](https://docs.ropensci.org/targets/reference/tar_make.html) by default shows all targets, for example:


``` default
✔ skipped target filenames_circles
✔ skipped target filenames_others
✔ skipped target filenames_lines
✔ skipped branch files_circles_9a8e66ae2f7cb722
✔ skipped branch files_circles_e0bacc914d455d5b
[...]
✔ skipped target patch_plots_circles
✔ skipped target patch_plots_others
✔ skipped target patch_plots_lines
✔ skipped target stat_summaries
✔ skipped target plots_agg
✔ skipped target report
✔ skipped pipeline [0.467 seconds]
```

- In contrast, **verbose_positives** would display for re-running only the `report`:

``` default
> tar_make()
▶ dispatched target report
● completed target report [15.379 seconds]
▶ ended pipeline [16.775 seconds]
```

- **summary**, is another compact option:

``` default
queued | skipped | dispatched | completed | errored | warned | canceled | time       
0      | 60      | 1          | 0         | 0       | 0      | 0        | 11:04 32.91
```


### Summary stats combined

```{r}
tar_read(stat_summaries)
```


### Patchwork for lines

Seven dataset appear as **lines** and were tagged as such. Here is the patchwork of the 7 plots:

```{r}
tar_read(patch_plots_lines)
```



### Patchwork of patchwork

We combined the 3 patchwork into one final plot.


```{r}
#| fig-height: 10
#| fig-width: 11
tar_read(plots_agg)
```


### Directed Acyclic Graph

Show dependencies, with the explicit names. We can show only the targets to simplify the DAG.

```{r}
tar_visnetwork(targets_only = TRUE, label = c("branches"))
```


